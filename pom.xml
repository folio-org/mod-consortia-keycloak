<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.2</version>
    <relativePath />
  </parent>

  <groupId>org.folio</groupId>
  <artifactId>mod-consortia-keycloak</artifactId>
  <name>mod-consortia-keycloak</name>
  <version>1.4.2-SNAPSHOT</version>
  <description>Business logic to manage consortia in FOLIO</description>
  <packaging>jar</packaging>

  <licenses>
    <license>
      <name>Apache License 2.0</name>
      <url>https://spdx.org/licenses/Apache-2.0</url>
    </license>
  </licenses>

  <properties>
    <java.version>17</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <start-class>org.folio.consortia.FolioConsortiaApplication</start-class>
    <sonar.exclusions>
      <!--
        exclude:
         - exclude domain classes, which are essentially simple POJO classes
           most of their body is generated with lombok. here is nothing to test or analyse
         - rest resources (generated API)
      -->
      src/main/java/**/cql/**/*,
      src/main/java/**/domain/**/*,
      src/main/java/**/configuration/**/*,
      src/main/java/**/rest/resource/**/*,
      src/main/java/**/mapper/**/*,
      src/main/java/**/integration/**/model/**/*,
      src/main/java/**/*Application.java
    </sonar.exclusions>
    <argLine />

    <consortia.yaml.file>${project.basedir}/src/main/resources/swagger.api/consortia.yaml</consortia.yaml.file>
    <self.yaml.file>${project.basedir}/src/main/resources/swagger.api/self.yaml</self.yaml.file>
    <tenants.yaml.file>${project.basedir}/src/main/resources/swagger.api/tenants.yaml</tenants.yaml.file>
    <user_tenants.yaml.file>${project.basedir}/src/main/resources/swagger.api/user_tenants.yaml</user_tenants.yaml.file>
    <user_events.yaml.file>${project.basedir}/src/main/resources/swagger.api/kafka_message_schemas.yaml
    </user_events.yaml.file>
    <consortia_configuration.yaml.file>${project.basedir}/src/main/resources/swagger.api/consortia_configuration.yaml
    </consortia_configuration.yaml.file>
    <publish_coordinator.yaml.file>${project.basedir}/src/main/resources/swagger.api/publications.yaml
    </publish_coordinator.yaml.file>
    <sharing_instances.yaml.file>${project.basedir}/src/main/resources/swagger.api/sharing_instances.yaml
    </sharing_instances.yaml.file>
    <sharing_settings.yaml.file>${project.basedir}/src/main/resources/swagger.api/sharing_settings.yaml
    </sharing_settings.yaml.file>

    <!-- runtime dependencies -->
    <folio-spring-base.version>8.1.2</folio-spring-base.version>
    <folio-service-tools.version>4.0.1</folio-service-tools.version>
    <openapi-generator.version>7.7.0</openapi-generator.version>
    <mapstruct.version>1.5.5.Final</mapstruct.version>
    <applications-poc-tools.version>1.5.4</applications-poc-tools.version>

    <!-- test dependencies -->
    <wiremock-standalone.version>3.0.1</wiremock-standalone.version>
    <testcontainers.version>1.20.0</testcontainers.version>
    <snakeyaml.version>2.2</snakeyaml.version>
    <testcontainers-bom.version>1.20.1</testcontainers-bom.version>
    <maven-checkstyle-plugin.version>3.3.1</maven-checkstyle-plugin.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.testcontainers</groupId>
        <artifactId>testcontainers-bom</artifactId>
        <version>${testcontainers-bom.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-base</artifactId>
      <version>${folio-spring-base.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-spring-system-user</artifactId>
      <version>${folio-spring-base.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-service-tools-spring-dev</artifactId>
      <version>${folio-service-tools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.folio</groupId>
      <artifactId>folio-backend-common</artifactId>
      <version>${applications-poc-tools.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-cache</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka</artifactId>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>4.2.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-jaxb-annotations</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jdk8</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.postgresql</groupId>
      <artifactId>postgresql</artifactId>
      <scope>runtime</scope>
    </dependency>

    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct</artifactId>
      <version>${mapstruct.version}</version>
    </dependency>
    <dependency>
      <groupId>one.util</groupId>
      <artifactId>streamex</artifactId>
      <version>0.8.2</version>
    </dependency>
    <dependency>
      <groupId>org.mapstruct</groupId>
      <artifactId>mapstruct-processor</artifactId>
      <version>${mapstruct.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Test dependencies -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.kafka</groupId>
      <artifactId>spring-kafka-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>logback-core</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>postgresql</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${testcontainers.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.testcontainers</groupId>
      <artifactId>kafka</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock-standalone</artifactId>
      <version>${wiremock-standalone.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>

      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
          </layers>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>filter-descriptor-inputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${basedir}/descriptors</directory>
                  <include>*Descriptor*-template.json</include>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.coderplus.maven.plugins</groupId>
        <artifactId>copy-rename-maven-plugin</artifactId>
        <version>1.0.1</version>
        <executions>
          <execution>
            <id>rename-descriptor-outputs</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>rename</goal>
            </goals>
            <configuration>
              <fileSets>
                <fileSet>
                  <sourceFile>${project.build.directory}/ModuleDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/ModuleDescriptor.json</destinationFile>
                </fileSet>
                <fileSet>
                  <sourceFile>${project.build.directory}/DeploymentDescriptor-template.json</sourceFile>
                  <destinationFile>${project.build.directory}/DeploymentDescriptor.json</destinationFile>
                </fileSet>
              </fileSets>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.openapitools</groupId>
        <artifactId>openapi-generator-maven-plugin</artifactId>
        <version>${openapi-generator.version}</version>
        <executions>
          <execution>
            <id>consortia</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${consortia.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>self</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${self.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>tenants</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${tenants.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>user_tenants</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${user_tenants.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>user_events</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${user_events.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>consortia_configuration</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${consortia_configuration.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>sharing instances</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${sharing_instances.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>sharing settings</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${sharing_settings.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
          <execution>
            <id>publish_coordinator</id>
            <goals>
              <goal>generate</goal>
            </goals>
            <configuration>
              <inputSpec>${publish_coordinator.yaml.file}</inputSpec>
              <output>${project.build.directory}/generated-sources</output>
              <generatorName>spring</generatorName>
              <modelPackage>${project.groupId}.consortia.domain.dto</modelPackage>
              <apiPackage>${project.groupId}.consortia.rest.resource</apiPackage>
              <generateApis>true</generateApis>
              <generateApiTests>true</generateApiTests>
              <generateApiDocumentation>true</generateApiDocumentation>
              <generateModels>true</generateModels>
              <generateModelTests>false</generateModelTests>
              <generateSupportingFiles>true</generateSupportingFiles>
              <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
              <generateModelDocumentation>true</generateModelDocumentation>
              <configOptions>
                <dateLibrary>java</dateLibrary>
                <interfaceOnly>true</interfaceOnly>
                <useSpringBoot3>true</useSpringBoot3>
              </configOptions>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.3.1</version>
        <configuration>
          <useSystemClassLoader>false</useSystemClassLoader>
          <argLine>@{argLine} -Dfile.encoding=UTF-8 -Duser.language=en -Duser.region=US</argLine>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.1.1</version>
        <configuration>
          <preparationGoals>clean verify</preparationGoals>
          <tagNameFormat>v@{project.version}</tagNameFormat>
          <pushChanges>false</pushChanges>
          <localCheckout>true</localCheckout>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.1.1</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <repositories>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </repository>

    <repository>
      <id>index-data-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://maven.indexdata.com</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>folio-nexus</id>
      <name>FOLIO Maven repository</name>
      <url>https://repository.folio.org/repository/maven-folio</url>
    </pluginRepository>
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>folio-nexus</id>
      <name>FOLIO Release Repository</name>
      <url>https://repository.folio.org/repository/maven-releases/</url>
      <uniqueVersion>false</uniqueVersion>
      <layout>default</layout>
    </repository>
    <snapshotRepository>
      <id>folio-nexus</id>
      <name>FOLIO Snapshot Repository</name>
      <uniqueVersion>true</uniqueVersion>
      <url>https://repository.folio.org/repository/maven-snapshots/</url>
      <layout>default</layout>
    </snapshotRepository>
  </distributionManagement>

  <scm>
    <url>https://github.com/folio-org/mod-consortia-keycloak</url>
    <connection>scm:git:git://github.com:folio-org/mod-consortia-keycloak.git</connection>
    <developerConnection>scm:git:git@github.com:folio-org/mod-consortia-keycloak.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <profiles>
    <profile>
      <id>coverage</id>

      <properties>
        <sonar.coverage.jacoco.xmlReportPaths>
          target/site/jacoco-aggregate/jacoco.xml
        </sonar.coverage.jacoco.xmlReportPaths>
      </properties>

      <build>
        <plugins>

          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.12</version>
            <configuration>
              <excludes>
                <exclude>**/domain/**/*</exclude>
                <exclude>**/cql/**/*</exclude>
                <exclude>**/configuration/**/*</exclude>
                <exclude>**/rest/resource/**/*</exclude>
                <exclude>**/mapper/**/*</exclude>
                <exclude>**/integration/**/model/**/*</exclude>
                <exclude>**/*Application.class</exclude>
              </excludes>
            </configuration>
            <executions>
              <execution>
                <id>prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>prepare-agent-integration</id>
                <goals>
                  <goal>prepare-agent-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
              <execution>
                <id>report-integration</id>
                <goals>
                  <goal>report-integration</goal>
                </goals>
              </execution>
              <execution>
                <id>merge-results</id>
                <phase>verify</phase>
                <goals>
                  <goal>merge</goal>
                </goals>
                <configuration>
                  <fileSets>
                    <fileSet>
                      <directory>${project.build.directory}</directory>
                      <includes>
                        <include>*.exec</include>
                      </includes>
                    </fileSet>
                  </fileSets>
                  <destFile>${project.build.directory}/jacoco-aggregate.exec</destFile>
                </configuration>
              </execution>
              <execution>
                <id>post-merge-report</id>
                <phase>verify</phase>
                <goals>
                  <goal>report</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                  <outputDirectory>${project.reporting.outputDirectory}/jacoco-aggregate</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>check</id>
                <goals>
                  <goal>check</goal>
                </goals>
                <configuration>
                  <dataFile>${project.build.directory}/jacoco-aggregate.exec</dataFile>
                  <haltOnFailure>false</haltOnFailure>
                  <rules>
                    <rule>
                      <element>BUNDLE</element>
                      <limits>
                        <limit>
                          <counter>INSTRUCTION</counter>
                          <value>COVEREDRATIO</value>
                          <minimum>80%</minimum>
                        </limit>
                      </limits>
                    </rule>
                  </rules>
                </configuration>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>
    </profile>

  </profiles>
</project>
